
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftOleftIDINTEGERNUMBERFLOATNUMBERFALSETRUEleftEQNEGELEGTLTrightASSIGNleftNOTleftLCBLRBLSBleftRCBRRBRSBleftSUMSUBleftMULDIVREMAINDERleftLRBRRBleftIFleftIF2leftIF3leftELIFELSEAND ASSIGN BOOLEAN COMMA DIV ELIF ELSE EQ ERROR FALSE FLOAT FLOATNUMBER FOR GE GT ID IF INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MUL NE NOT OR PRINT RCB REMAINDER RETURN RRB RSB SEMICOLON SUB SUM THEN TRUE VOID WHILEprogram : declist MAIN LRB RRB blockprogram : MAIN LRB RRB blockdeclist : dec declist1declist : decdeclist1 : dec declist1declist1 : decdec : vardecdec : funcdectype : INTEGERtype : FLOATtype : BOOLEANiddec : IDiddec : ID LSB exp RSBiddec : ID ASSIGN expidlist : iddec idlist1idlist1 : idlist1 : COMMA iddec idlist1vardec : type idlist SEMICOLONfuncdec : type ID LRB paramdecs RRB blockfuncdec : VOID ID LRB paramdecs RRB blockparamdecs : paramdecslistparamdecs : paramdecslist : paramdec paramdecslist1paramdecslist1 : COMMA paramdec paramdecslist1paramdecslist1 : paramdec : type IDparamdec : type ID LSB RSBvarlist : vardec varlistvarlist : block : LCB varlist stmtlist RCBblock : LCB varlist RCBstmtlist : stmt stmtliststmtlist : stmtlvalue : IDlvalue : ID LSB exp RSBstmt : simpstmt %prec IF3simpstmt : RETURN exp SEMICOLONsimpstmt : exp SEMICOLONsimpstmt : blocksimpstmt : WHILE LRB exp RRB stmtsimpstmt : FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmtstmt : ifnoelsestmt : ifwithelseifnoelse : IF LRB exp RRB stmtifnoelse : IF LRB exp RRB elseiflistifnoelse : IF LRB exp RRB simpstmt elseiflistifwithelse : IF LRB exp RRB simpstmt elseiflist ELSE stmt %prec IF2ifwithelse : IF LRB exp RRB simpstmt ELSE simpstmtsimpstmt : PRINT LRB ID RRB SEMICOLONelseiflist : ELIF LRB exp RRB stmt elseiflistelseiflist : ELIF LRB exp RRB stmtexp : lvalue ASSIGN expexp : exp operator exp %prec SUMexp : exp op1 exp %prec Oexp : exp relop exp %prec EQexp : constexp : lvalueexp : ID LRB explist RRBexp : ID LRB RRBexp : LRB exp RRBexp : SUB expexp : NOT expexplist : expexplist :  exp COMMA explistoperator : op1 %prec Oop1 : ORop1 : ANDoperator : SUMoperator : SUBoperator : MULoperator : DIVoperator : REMAINDERconst : INTEGERNUMBERconst : FLOATNUMBERconst : FALSEconst : TRUErelop : GTrelop : LTrelop : NErelop : EQrelop : LErelop : GE'
    
_lr_action_items = {'MAIN':([0,2,4,5,6,14,15,22,23,86,100,111,112,],[3,12,-4,-7,-8,-6,-3,-5,-18,-31,-19,-20,-30,]),'VOID':([0,4,5,6,14,23,86,100,111,112,],[8,8,-7,-8,8,-18,-31,-19,-20,-30,]),'INTEGER':([0,4,5,6,14,23,24,29,32,54,59,86,100,111,112,],[9,9,-7,-8,9,-18,9,9,9,9,9,-31,-19,-20,-30,]),'FLOAT':([0,4,5,6,14,23,24,29,32,54,59,86,100,111,112,],[10,10,-7,-8,10,-18,10,10,10,10,10,-31,-19,-20,-30,]),'BOOLEAN':([0,4,5,6,14,23,24,29,32,54,59,86,100,111,112,],[11,11,-7,-8,11,-18,11,11,11,11,11,-31,-19,-20,-30,]),'$end':([1,31,52,86,112,],[0,-2,-1,-31,-30,]),'LRB':([3,12,17,19,23,25,26,32,37,41,42,43,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,94,95,96,97,98,112,115,116,117,119,123,125,131,132,134,135,137,138,139,140,141,142,143,144,145,147,148,150,151,152,153,154,155,],[13,20,24,29,-18,41,41,-29,60,41,41,41,41,-29,41,41,41,41,41,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,41,-31,41,-36,-42,-43,41,-39,116,117,118,119,-28,-30,-38,41,41,41,41,-37,41,41,41,-40,-49,-44,-45,-36,145,41,-46,41,41,41,-48,41,-47,41,-41,-51,-50,]),'ID':([7,8,9,10,11,23,25,26,28,32,33,41,42,43,53,54,55,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,98,112,115,116,117,118,119,123,125,131,132,134,135,137,138,139,140,142,143,144,145,147,148,150,151,152,153,154,155,],[17,19,-9,-10,-11,-18,37,37,50,-29,56,37,37,37,37,-29,50,37,37,37,37,37,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,37,-31,37,-36,-42,-43,37,-39,-28,-30,-38,37,37,128,37,37,-37,37,37,37,-40,-49,-44,-45,-36,37,-46,37,37,37,-48,37,-47,37,-41,-51,-50,]),'RRB':([13,20,24,29,34,35,36,37,39,40,44,45,46,47,51,56,58,60,80,81,82,101,102,103,104,106,107,108,109,110,120,121,122,124,126,128,129,130,146,149,],[21,30,-22,-22,57,-21,-25,-34,-57,-56,-73,-74,-75,-76,84,-26,-23,103,110,-61,-62,-25,122,-59,-63,-53,-54,-55,-52,-60,-27,-24,-58,-35,131,133,134,-64,150,152,]),'SEMICOLON':([16,17,18,27,37,39,40,44,45,46,47,48,49,50,62,81,82,83,92,103,106,107,108,109,110,114,122,124,127,133,136,],[23,-12,-16,-15,-34,-57,-56,-73,-74,-75,-76,-14,-16,-12,-13,-61,-62,-17,115,-59,-53,-54,-55,-52,-60,125,-58,-35,132,137,142,]),'COMMA':([17,18,36,37,39,40,44,45,46,47,48,49,50,56,62,81,82,101,103,104,106,107,108,109,110,120,122,124,],[-12,28,59,-34,-57,-56,-73,-74,-75,-76,-14,28,-12,-26,-13,-61,-62,59,-59,123,-53,-54,-55,-52,-60,-27,-58,-35,]),'LSB':([17,37,50,56,],[25,61,25,99,]),'ASSIGN':([17,37,39,50,124,],[26,-34,79,26,-35,]),'LCB':([21,23,30,32,53,54,57,84,86,87,88,89,90,93,98,112,115,125,131,134,135,137,138,139,140,143,144,147,148,150,151,152,153,154,155,],[32,-18,32,-29,32,-29,32,32,-31,32,-36,-42,-43,-39,-28,-30,-38,-37,32,32,-40,-49,-44,-45,-36,-46,32,32,-48,32,-47,32,-41,-51,-50,]),'RCB':([23,32,53,54,85,86,87,88,89,90,93,98,112,113,115,125,135,137,138,139,140,143,148,151,153,154,155,],[-18,-29,86,-29,112,-31,-33,-36,-42,-43,-39,-28,-30,-32,-38,-37,-40,-49,-44,-45,-36,-46,-48,-47,-41,-51,-50,]),'RETURN':([23,32,53,54,86,87,88,89,90,93,98,112,115,125,131,134,135,137,138,139,140,143,144,147,148,150,151,152,153,154,155,],[-18,-29,91,-29,-31,91,-36,-42,-43,-39,-28,-30,-38,-37,91,91,-40,-49,-44,-45,-36,-46,91,91,-48,91,-47,91,-41,-51,-50,]),'WHILE':([23,32,53,54,86,87,88,89,90,93,98,112,115,125,131,134,135,137,138,139,140,143,144,147,148,150,151,152,153,154,155,],[-18,-29,94,-29,-31,94,-36,-42,-43,-39,-28,-30,-38,-37,94,94,-40,-49,-44,-45,-36,-46,94,94,-48,94,-47,94,-41,-51,-50,]),'FOR':([23,32,53,54,86,87,88,89,90,93,98,112,115,125,131,134,135,137,138,139,140,143,144,147,148,150,151,152,153,154,155,],[-18,-29,95,-29,-31,95,-36,-42,-43,-39,-28,-30,-38,-37,95,95,-40,-49,-44,-45,-36,-46,95,95,-48,95,-47,95,-41,-51,-50,]),'PRINT':([23,32,53,54,86,87,88,89,90,93,98,112,115,125,131,134,135,137,138,139,140,143,144,147,148,150,151,152,153,154,155,],[-18,-29,96,-29,-31,96,-36,-42,-43,-39,-28,-30,-38,-37,96,96,-40,-49,-44,-45,-36,-46,96,96,-48,96,-47,96,-41,-51,-50,]),'IF':([23,32,53,54,86,87,88,89,90,93,98,112,115,125,131,134,135,137,138,139,140,143,147,148,150,151,152,153,154,155,],[-18,-29,97,-29,-31,97,-36,-42,-43,-39,-28,-30,-38,-37,97,97,-40,-49,-44,-45,-36,-46,97,-48,97,-47,97,-41,-51,-50,]),'SUB':([23,25,26,32,37,38,39,40,41,42,43,44,45,46,47,48,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,87,88,89,90,91,92,93,98,103,104,105,106,107,108,109,110,112,114,115,116,117,119,122,123,124,125,126,127,129,131,132,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[-18,42,42,-29,-34,67,-57,-56,42,42,42,-73,-74,-75,-76,67,42,-29,42,42,42,42,42,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,42,67,-61,67,-31,42,-36,-42,-43,42,67,-39,-28,-59,67,67,-53,67,67,67,-60,-30,67,-38,42,42,42,-58,42,-35,-37,67,67,67,42,42,42,-40,67,-49,-44,-45,-36,42,-46,42,42,67,42,-48,67,42,-47,42,-41,-51,-50,]),'NOT':([23,25,26,32,41,42,43,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,98,112,115,116,117,119,123,125,131,132,134,135,137,138,139,140,142,143,144,145,147,148,150,151,152,153,154,155,],[-18,43,43,-29,43,43,43,43,-29,43,43,43,43,43,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,43,-31,43,-36,-42,-43,43,-39,-28,-30,-38,43,43,43,43,-37,43,43,43,-40,-49,-44,-45,-36,43,-46,43,43,43,-48,43,-47,43,-41,-51,-50,]),'INTEGERNUMBER':([23,25,26,32,41,42,43,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,98,112,115,116,117,119,123,125,131,132,134,135,137,138,139,140,142,143,144,145,147,148,150,151,152,153,154,155,],[-18,44,44,-29,44,44,44,44,-29,44,44,44,44,44,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,44,-31,44,-36,-42,-43,44,-39,-28,-30,-38,44,44,44,44,-37,44,44,44,-40,-49,-44,-45,-36,44,-46,44,44,44,-48,44,-47,44,-41,-51,-50,]),'FLOATNUMBER':([23,25,26,32,41,42,43,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,98,112,115,116,117,119,123,125,131,132,134,135,137,138,139,140,142,143,144,145,147,148,150,151,152,153,154,155,],[-18,45,45,-29,45,45,45,45,-29,45,45,45,45,45,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,45,-31,45,-36,-42,-43,45,-39,-28,-30,-38,45,45,45,45,-37,45,45,45,-40,-49,-44,-45,-36,45,-46,45,45,45,-48,45,-47,45,-41,-51,-50,]),'FALSE':([23,25,26,32,41,42,43,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,98,112,115,116,117,119,123,125,131,132,134,135,137,138,139,140,142,143,144,145,147,148,150,151,152,153,154,155,],[-18,46,46,-29,46,46,46,46,-29,46,46,46,46,46,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,46,-31,46,-36,-42,-43,46,-39,-28,-30,-38,46,46,46,46,-37,46,46,46,-40,-49,-44,-45,-36,46,-46,46,46,46,-48,46,-47,46,-41,-51,-50,]),'TRUE':([23,25,26,32,41,42,43,53,54,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,98,112,115,116,117,119,123,125,131,132,134,135,137,138,139,140,142,143,144,145,147,148,150,151,152,153,154,155,],[-18,47,47,-29,47,47,47,47,-29,47,47,47,47,47,-68,-69,-70,-71,-72,-66,-67,-77,-78,-79,-80,-81,-82,47,-31,47,-36,-42,-43,47,-39,-28,-30,-38,47,47,47,47,-37,47,47,47,-40,-49,-44,-45,-36,47,-46,47,47,47,-48,47,-47,47,-41,-51,-50,]),'RSB':([37,38,39,40,44,45,46,47,81,82,99,103,105,106,107,108,109,110,122,124,],[-34,62,-57,-56,-73,-74,-75,-76,-61,-62,120,-59,124,-53,-54,-55,-52,-60,-58,-35,]),'SUM':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,66,-57,-56,-73,-74,-75,-76,66,66,-61,66,66,-59,66,66,-53,66,66,66,-60,66,-58,-35,66,66,66,66,66,66,]),'MUL':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,68,-57,-56,-73,-74,-75,-76,68,68,68,68,68,-59,68,68,68,68,68,68,-60,68,-58,-35,68,68,68,68,68,68,]),'DIV':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,69,-57,-56,-73,-74,-75,-76,69,69,69,69,69,-59,69,69,69,69,69,69,-60,69,-58,-35,69,69,69,69,69,69,]),'REMAINDER':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,70,-57,-56,-73,-74,-75,-76,70,70,70,70,70,-59,70,70,70,70,70,70,-60,70,-58,-35,70,70,70,70,70,70,]),'OR':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,71,-57,-56,-73,-74,-75,-76,71,71,-61,-62,71,-59,71,71,-53,-54,-55,-52,-60,71,-58,-35,71,71,71,71,71,71,]),'AND':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,72,-57,-56,-73,-74,-75,-76,72,72,-61,-62,72,-59,72,72,-53,-54,-55,-52,-60,72,-58,-35,72,72,72,72,72,72,]),'GT':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,73,-57,-56,-73,-74,-75,-76,73,73,-61,-62,73,-59,73,73,-53,73,-55,-52,-60,73,-58,-35,73,73,73,73,73,73,]),'LT':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,74,-57,-56,-73,-74,-75,-76,74,74,-61,-62,74,-59,74,74,-53,74,-55,-52,-60,74,-58,-35,74,74,74,74,74,74,]),'NE':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,75,-57,-56,-73,-74,-75,-76,75,75,-61,-62,75,-59,75,75,-53,75,-55,-52,-60,75,-58,-35,75,75,75,75,75,75,]),'EQ':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,76,-57,-56,-73,-74,-75,-76,76,76,-61,-62,76,-59,76,76,-53,76,-55,-52,-60,76,-58,-35,76,76,76,76,76,76,]),'LE':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,77,-57,-56,-73,-74,-75,-76,77,77,-61,-62,77,-59,77,77,-53,77,-55,-52,-60,77,-58,-35,77,77,77,77,77,77,]),'GE':([37,38,39,40,44,45,46,47,48,80,81,82,92,103,104,105,106,107,108,109,110,114,122,124,126,127,129,136,146,149,],[-34,78,-57,-56,-73,-74,-75,-76,78,78,-61,-62,78,-59,78,78,-53,78,-55,-52,-60,78,-58,-35,78,78,78,78,78,78,]),'ELSE':([86,88,89,90,93,112,115,125,135,137,138,139,140,143,148,151,153,154,155,],[-31,-36,-42,-43,-39,-30,-38,-37,-40,-49,-44,-45,144,147,-48,-47,-41,-51,-50,]),'ELIF':([86,88,89,90,93,112,115,125,134,135,137,138,139,140,143,148,151,153,154,155,],[-31,-36,-42,-43,-39,-30,-38,-37,141,-40,-49,-44,-45,141,-46,-48,-47,-41,141,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'dec':([0,4,14,],[4,14,14,]),'vardec':([0,4,14,32,54,],[5,5,5,54,54,]),'funcdec':([0,4,14,],[6,6,6,]),'type':([0,4,14,24,29,32,54,59,],[7,7,7,33,33,55,55,33,]),'declist1':([4,14,],[15,22,]),'idlist':([7,55,],[16,16,]),'iddec':([7,28,55,],[18,49,18,]),'idlist1':([18,49,],[27,83,]),'block':([21,30,53,57,84,87,131,134,144,147,150,152,],[31,52,93,100,111,93,93,93,93,93,93,93,]),'paramdecs':([24,29,],[34,51,]),'paramdecslist':([24,29,],[35,35,]),'paramdec':([24,29,59,],[36,36,101,]),'exp':([25,26,41,42,43,53,60,61,63,64,65,79,87,91,116,117,119,123,131,132,134,142,144,145,147,150,152,],[38,48,80,81,82,92,104,105,106,107,108,109,92,114,126,127,129,104,92,136,92,146,92,149,92,92,92,]),'lvalue':([25,26,41,42,43,53,60,61,63,64,65,79,87,91,116,117,119,123,131,132,134,142,144,145,147,150,152,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'const':([25,26,41,42,43,53,60,61,63,64,65,79,87,91,116,117,119,123,131,132,134,142,144,145,147,150,152,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'varlist':([32,54,],[53,98,]),'paramdecslist1':([36,101,],[58,121,]),'operator':([38,48,80,81,82,92,104,105,106,107,108,109,114,126,127,129,136,146,149,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'op1':([38,48,80,81,82,92,104,105,106,107,108,109,114,126,127,129,136,146,149,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'relop':([38,48,80,81,82,92,104,105,106,107,108,109,114,126,127,129,136,146,149,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'stmtlist':([53,87,],[85,113,]),'stmt':([53,87,131,134,147,150,152,],[87,87,135,138,151,153,154,]),'simpstmt':([53,87,131,134,144,147,150,152,],[88,88,88,140,148,88,88,88,]),'ifnoelse':([53,87,131,134,147,150,152,],[89,89,89,89,89,89,89,]),'ifwithelse':([53,87,131,134,147,150,152,],[90,90,90,90,90,90,90,]),'explist':([60,123,],[102,130,]),'elseiflist':([134,140,154,],[139,143,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','yacc.py',13),
  ('program -> MAIN LRB RRB block','program',4,'p_program1','yacc.py',17),
  ('declist -> dec declist1','declist',2,'p_declist_decdeclist1','yacc.py',21),
  ('declist -> dec','declist',1,'p_declist_dec','yacc.py',25),
  ('declist1 -> dec declist1','declist1',2,'p_declist1_declist1','yacc.py',29),
  ('declist1 -> dec','declist1',1,'p_declist1_dec','yacc.py',33),
  ('dec -> vardec','dec',1,'p_dec_vardec','yacc.py',37),
  ('dec -> funcdec','dec',1,'p_dec_funcdec','yacc.py',41),
  ('type -> INTEGER','type',1,'p_type_int','yacc.py',45),
  ('type -> FLOAT','type',1,'p_type_float','yacc.py',49),
  ('type -> BOOLEAN','type',1,'p_type_bool','yacc.py',53),
  ('iddec -> ID','iddec',1,'p_iddec_id','yacc.py',57),
  ('iddec -> ID LSB exp RSB','iddec',4,'p_iddec_idexp','yacc.py',61),
  ('iddec -> ID ASSIGN exp','iddec',3,'p_iddec_idAexp','yacc.py',65),
  ('idlist -> iddec idlist1','idlist',2,'p_idlist_idlist1','yacc.py',69),
  ('idlist1 -> <empty>','idlist1',0,'p_idlist1_iddec','yacc.py',73),
  ('idlist1 -> COMMA iddec idlist1','idlist1',3,'p_idlist1_idlist1','yacc.py',77),
  ('vardec -> type idlist SEMICOLON','vardec',3,'p_vardec','yacc.py',81),
  ('funcdec -> type ID LRB paramdecs RRB block','funcdec',6,'p_funcdec_type','yacc.py',85),
  ('funcdec -> VOID ID LRB paramdecs RRB block','funcdec',6,'p_funcdec_id','yacc.py',89),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs_plist','yacc.py',93),
  ('paramdecs -> <empty>','paramdecs',0,'p_paramdecs_lambda','yacc.py',97),
  ('paramdecslist -> paramdec paramdecslist1','paramdecslist',2,'p_paramdecslist_paramdeclist1','yacc.py',101),
  ('paramdecslist1 -> COMMA paramdec paramdecslist1','paramdecslist1',3,'p_paramdecslist1_paramdeclist1','yacc.py',105),
  ('paramdecslist1 -> <empty>','paramdecslist1',0,'p_paramdecslist1_lambda','yacc.py',109),
  ('paramdec -> type ID','paramdec',2,'p_paramdec_type','yacc.py',113),
  ('paramdec -> type ID LSB RSB','paramdec',4,'p_paramdec_id','yacc.py',117),
  ('varlist -> vardec varlist','varlist',2,'p_varlist_varlist','yacc.py',121),
  ('varlist -> <empty>','varlist',0,'p_varlist_lambda','yacc.py',125),
  ('block -> LCB varlist stmtlist RCB','block',4,'p_block','yacc.py',129),
  ('block -> LCB varlist RCB','block',3,'p_block1','yacc.py',133),
  ('stmtlist -> stmt stmtlist','stmtlist',2,'p_stmtlist_stmtlist','yacc.py',137),
  ('stmtlist -> stmt','stmtlist',1,'p_stmtlist_lambda','yacc.py',141),
  ('lvalue -> ID','lvalue',1,'p_lvalue_id','yacc.py',145),
  ('lvalue -> ID LSB exp RSB','lvalue',4,'p_lvalue_idexp','yacc.py',149),
  ('stmt -> simpstmt','stmt',1,'p_stmt_simpstmt','yacc.py',153),
  ('simpstmt -> RETURN exp SEMICOLON','simpstmt',3,'p_simpstmt_return','yacc.py',157),
  ('simpstmt -> exp SEMICOLON','simpstmt',2,'p_simpstmt_exp','yacc.py',161),
  ('simpstmt -> block','simpstmt',1,'p_simpstmt_block','yacc.py',165),
  ('simpstmt -> WHILE LRB exp RRB stmt','simpstmt',5,'p_simpstmt_while','yacc.py',169),
  ('simpstmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt','simpstmt',9,'p_simpstmt_for','yacc.py',173),
  ('stmt -> ifnoelse','stmt',1,'p_stmt_ifnoelse','yacc.py',177),
  ('stmt -> ifwithelse','stmt',1,'p_stmt_ifwithelse','yacc.py',181),
  ('ifnoelse -> IF LRB exp RRB stmt','ifnoelse',5,'p_ifnoelse_ifnoelse','yacc.py',185),
  ('ifnoelse -> IF LRB exp RRB elseiflist','ifnoelse',5,'p_ifnoelse_elif','yacc.py',189),
  ('ifnoelse -> IF LRB exp RRB simpstmt elseiflist','ifnoelse',6,'p_ifnoelse_elif1','yacc.py',193),
  ('ifwithelse -> IF LRB exp RRB simpstmt elseiflist ELSE stmt','ifwithelse',8,'p_ifwithelse','yacc.py',197),
  ('ifwithelse -> IF LRB exp RRB simpstmt ELSE simpstmt','ifwithelse',7,'p_ifwithelse_lambda','yacc.py',201),
  ('simpstmt -> PRINT LRB ID RRB SEMICOLON','simpstmt',5,'p_simpstmt_print','yacc.py',205),
  ('elseiflist -> ELIF LRB exp RRB stmt elseiflist','elseiflist',6,'p_elseiflist_elseiflist','yacc.py',209),
  ('elseiflist -> ELIF LRB exp RRB stmt','elseiflist',5,'p_elseiflist_elif','yacc.py',213),
  ('exp -> lvalue ASSIGN exp','exp',3,'p_exp_lvalueassignexp','yacc.py',217),
  ('exp -> exp operator exp','exp',3,'p_exp_expopexp','yacc.py',221),
  ('exp -> exp op1 exp','exp',3,'p_exp_expop1exp','yacc.py',225),
  ('exp -> exp relop exp','exp',3,'p_exp_exprexp','yacc.py',229),
  ('exp -> const','exp',1,'p_exp_const','yacc.py',233),
  ('exp -> lvalue','exp',1,'p_exp_lvalue','yacc.py',237),
  ('exp -> ID LRB explist RRB','exp',4,'p_exp_idexp','yacc.py',241),
  ('exp -> ID LRB RRB','exp',3,'p_exp_id','yacc.py',245),
  ('exp -> LRB exp RRB','exp',3,'p_exp_explrb','yacc.py',249),
  ('exp -> SUB exp','exp',2,'p_exp_expnegative','yacc.py',253),
  ('exp -> NOT exp','exp',2,'p_exp_expnot','yacc.py',257),
  ('explist -> exp','explist',1,'p_explist','yacc.py',261),
  ('explist -> exp COMMA explist','explist',3,'p_explist_explist','yacc.py',265),
  ('operator -> op1','operator',1,'p_operator_op1','yacc.py',269),
  ('op1 -> OR','op1',1,'p_operator_or','yacc.py',273),
  ('op1 -> AND','op1',1,'p_operator_and','yacc.py',277),
  ('operator -> SUM','operator',1,'p_operator_sum','yacc.py',281),
  ('operator -> SUB','operator',1,'p_operator_sub','yacc.py',285),
  ('operator -> MUL','operator',1,'p_operator_mul','yacc.py',289),
  ('operator -> DIV','operator',1,'p_operator_div','yacc.py',293),
  ('operator -> REMAINDER','operator',1,'p_operator_remainder','yacc.py',297),
  ('const -> INTEGERNUMBER','const',1,'p_const_intnumber','yacc.py',301),
  ('const -> FLOATNUMBER','const',1,'p_const_floatnumber','yacc.py',305),
  ('const -> FALSE','const',1,'p_const_true','yacc.py',309),
  ('const -> TRUE','const',1,'p_const_false','yacc.py',313),
  ('relop -> GT','relop',1,'p_relop_GT','yacc.py',317),
  ('relop -> LT','relop',1,'p_relop_LT','yacc.py',321),
  ('relop -> NE','relop',1,'p_relop_NE','yacc.py',325),
  ('relop -> EQ','relop',1,'p_relop_EQ','yacc.py',329),
  ('relop -> LE','relop',1,'p_relop_LE','yacc.py',333),
  ('relop -> GE','relop',1,'p_relop_GE','yacc.py',337),
]
